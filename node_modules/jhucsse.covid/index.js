let Fetch = require('node-fetch');
for(const o of ['all','confirmed','deaths','recovered'])exports[o]=(async()=>{let t = await Fetch(`https://coronavirus-tracker-api.herokuapp.com/${o}`);return await t.json()})

exports.getCountry = (cfg={})=>{
if (!cfg.hasOwnProperty('cc')) {
    return console.error('CFG Misses Property \'cc\' @ <>.getCountry')
}; 
let cc = cfg.cc;
    
// Returning object.
let obj = {
    confirmed: {},
    deaths: {},
    recovered: {}
};
    
    return exports.all().then(r=>{
// Saving the dates so we can use them to sort the returning object.
let Dates = Object.keys(r.confirmed.locations.filter(e => "Hubei" === e.province)[0].history);

// Filtering the locations, pulling the values and reducing them to a final output.
var x = r.confirmed.locations.filter(e => e.country_code == cc).map(e => Object.values(e.history)).reduce((e, r) => e.map((e, c) => Number(e) + Number(r[c])));
var y = r.deaths.locations.filter(e => e.country_code == cc).map(e => Object.values(e.history)).reduce((e, r) => e.map((e, c) => Number(e) + Number(r[c])));
var z = r.recovered.locations.filter(e => e.country_code == cc).map(e => Object.values(e.history)).reduce((e, r) => e.map((e, c) => Number(e) + Number(r[c])));

// Assigning the dates to the right values.
for (const e of Dates) obj.confirmed[e] = x[Dates.indexOf(e)];
for (const e of Dates) obj.deaths[e] = y[Dates.indexOf(e)];
for (const e of Dates) obj.recovered[e] = z[Dates.indexOf(e)];

// Node x.x < 12.x does not support Object.fromEnteries https://tc39.es/ecma262/#sec-object.fromentries
// Sorting the values, and reversing them for specefic uses.
obj.confirmed=Object.fromEntries(new Map(Object.entries(obj.confirmed).sort((e,t)=>new Date(t[0])-new Date(e[0])).reverse()));
obj.recovered=Object.fromEntries(new Map(Object.entries(obj.recovered).sort((e,t)=>new Date(t[0])-new Date(e[0])).reverse()));
obj.deaths=Object.fromEntries(new Map(Object.entries(obj.deaths).sort((e,t)=>new Date(t[0])-new Date(e[0])).reverse()));
                            
                            return obj;
    })
    
    }